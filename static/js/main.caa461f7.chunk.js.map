{"version":3,"sources":["components/Button.component.js","components/Admin.component.js","components/Home.component.js","components/Header.component.js","components/Register.component.js","components/Payment.component.js","components/Status.component.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","state","title","className","this","class","name","Component","Entry","entry","year","amount","conf","Home","reservation","axios","get","then","res","setState","data","catch","err","console","log","map","id","href","reservationList","to","Header","src","alt","Register","e","preventDefault","document","querySelector","value","post","alert","window","location","onSubmit","handleSubmit","type","placeholder","Payment","onChangeHandler","event","target","files","action","onChange","Check","bind","App","username","password","isAdmin","path","component","Status","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.caa461f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import \"./Home.css\";\n\nexport default class Button extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: 'Button_Name'\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <a className={this.props.class}>{ this.props.name }</a>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Button from \"./Button.component\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Entry = props => (\n  <tr>\n    <td>{props.entry.name}</td>\n    <td>{props.entry.year}</td>\n    <td>{props.entry.amount}</td>\n    {props.entry.conf ? <td>view</td> : <td>✗</td>}\n  </tr>\n)\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      reservation: [] \n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:4000/api/register\")\n      .then((res) => {this.setState({reservation: res.data})})\n      .catch(err => console.log(err));\n  }\n\n  reservationList() {\n    return this.state.reservation.map(entry => {\n      return <Entry entry={entry} />\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"admin\">\n        <div className=\"container\">\n          <h1>Admin Tools</h1>\n\n          <hr />\n          <table>\n            <tr>\n              <th>Name</th>\n              <th>Year</th>\n              <th>Amount</th>\n              <th>Confirmation</th>\n            </tr>\n            <tr>\n              <td>Chayond Chaiyachue</td>\n              <td>ED38</td>\n              <td>2</td>\n              <td>✗</td>\n            </tr>\n            <tr>\n              <td>Kasom Suramongkol</td>\n              <td>ED58</td>\n              <td>1</td>\n              <td>✗</td>\n            </tr>\n            <tr>\n              <td>Kittikorn Saowaluk</td>\n              <td>ED28</td>\n              <td>4</td>\n              <td><a href=\"#\">view</a></td>\n            </tr>\n            <tr>\n              <td>Bunbongkarn Lertkunakorn</td>\n              <td>ED32</td>\n              <td>1</td>\n              <td>✗</td>\n            </tr>\n            {this.reservationList()}\n          </table>\n\n          <p>{ this.state.reservation.id }</p>\n\n          <Link to={`/`}>\n            <Button name=\"Logout\" class=\"btn\" />\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div id=\"Home\">\n      <h1>โปรแกรมจองโต๊ะ</h1>\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Amet nesciunt doloremque ipsa veniam excepturi officiis sequi consequuntur! Accusamus, iusto amet!</p>\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\nimport Button from \"./Button.component\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n      <div>\n        <header>\n          <div className=\"container\">\n            <Link to=\"/\">\n              <img\n                className=\"logo\"\n                src=\"http://edu2.ku.ac.th/event62/img/logo3.png\"\n                alt=\"logo\"\n              />\n            </Link>\n            <nav>\n              <Link to={`/register`}>\n                <Button name=\"สำรองโต๊ะ\" class=\"register btn\" />\n              </Link>\n              <ul className=\"navbar\">\n                <li>\n                  <Link to={`/payment_confirmation`}>\n                    <Button name=\"ส่งหลักฐานการชำระเงิน\" class=\"btn\" />\n                  </Link>\n                </li>\n                <li>\n                  <Link to={`/status`}>\n                    <Button name=\"ตรวจสอบสถานะ\" class=\"btn\" />\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\nexport default Header;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button.component\";\nimport axios from 'axios';\n\nexport default class Register extends Component {\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const name = document.querySelector(\"#name\").value;\n    const year = document.querySelector(\"#year\").value;\n    const amount = document.querySelector(\"#amount\").value;\n\n    const entry = {\n      name: name,\n      year: year,\n      amount: amount\n    };\n\n    console.log(entry);\n\n    axios.post(\"http://localhost:4000/api/register\", entry)\n      .then(res => alert(res.data));\n\n    window.location = '/'\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>ลงทะเบียนจองโต๊ะ</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"name\" placeholder=\"ชื่อผู้จอง\" id=\"name\"/>\n          <select id=\"year\" name=\"year\" id=\"year\">\n            <option value=\"1\">ปี1</option>\n            <option value=\"2\">ปี2</option>\n            <option value=\"3\">ปี3</option>\n            <option value=\"4\">ปี4</option>\n          </select>\n          <input type=\"text\" name=\"amt\" placeholder=\"จำนวน\" id=\"amount\"/>\n          <input type=\"submit\" />\n        </form>\n\n        <Link to=\"/\">\n          <Button name=\"กลับหน้าหลัก\" class=\"btn\" />\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button.component\";\n\nexport default class Payment extends Component {\n  onChangeHandler = (event) => {\n    console.log(event.target.files[0]);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>ส่งหลักฐานการชำระเงิน</h1>\n        <form action=\"\">\n          <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\n          <input type=\"submit\" value=\"ตกลง\"/>\n        </form>\n\n        <Link to=\"/\">\n            <Button name=\"กลับหน้าหลัก\" class=\"btn\" />\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./Button.component\";\nimport axios from \"axios\";\n\nexport default class Check extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      entry: []\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    const name = document.querySelector(\"#name\").value;\n\n    console.log(name);\n\n    e.preventDefault();\n\n    axios.get(`http://localhost:4000/api/register/search/${name}`)\n      .then((res) => {this.setState({entry: res.data})})\n      .catch(err => {\n        this.setState({entry: {conf: 'error'}})\n        console.log(err)\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>ตรวจสอบสถานะการจอง</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"status\" placeholder=\"Name\" id=\"name\" />\n          <input type=\"submit\" value=\"ตกลง\"/>\n        </form>\n\n        <p className=\"status\">{this.state.entry.conf ? \"ยืนยันแล้ว\" : \"ยังไม่ได้จ่ายเงิน\"}</p>\n\n        <Link to=\"/\">\n          <Button name=\"กลับหน้าหลัก\" class=\"btn\" />\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Link } from \"react-router-dom\";\nimport \"./Main.css\";\n\n// Component\nimport Admin from \"./components/Admin.component\";\nimport Home from \"./components/Home.component\";\nimport Header from \"./components/Header.component\";\nimport Register from \"./components/Register.component\";\nimport Payment from \"./components/Payment.component\";\nimport Status from \"./components/Status.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"admin\",\n      password: \"password\",\n      isAdmin: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    const username = document.querySelector(\"#username\").value;\n    const password = document.querySelector(\"#password\").value;\n\n    e.preventDefault();\n\n    if (username === this.state.username && password === this.state.password) {\n      this.setState({isAdmin: true})\n      alert(\"Authenticated!\");\n    }\n    \n  }\n\n  render() {\n    return (\n      // <Router>\n      <div>\n        <Route path=\"/admin\">\n          {this.state.isAdmin ? <Admin /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/\">\n          <Header />\n          <div className=\"container\">\n            <Route path=\"/login\">\n              <h1>Login</h1>\n              <form onSubmit={this.handleSubmit}>\n                <input id=\"username\" type=\"text\" placeholder=\"username\"/>\n                <input id=\"password\" type=\"password\" placeholder=\"password\"/>\n                \n                <input type=\"submit\" value=\"Login\"/>\n                {this.state.isAdmin ? <Link to=\"/admin\">Admin tools</Link> : \"\"}\n              </form>\n            </Route>\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/payment_confirmation\" component={Payment} />\n            <Route path=\"/status\" component={Status} />\n          </div>\n        </Route>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}